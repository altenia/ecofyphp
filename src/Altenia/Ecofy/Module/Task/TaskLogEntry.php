<?php namespace Altenia\Ecofy\Module\Task;

use Illuminate\Database\Eloquent\Model;

/**
 * Models from schema: ecofy version 0.1
 * Code generated by TransformTask
 *
 */

class TaskLogEntry extends Model {

    /**
	 * The database table used by the model.
	 *
	 * @var string
	 */
    protected $table = 'task_log_entries';

    /**
	 * The primary key column name.
	 *
	 * @var string
	 */
	protected $primaryKey = 'sid';

	/**
	 * To disable created_at and updated_at.
	 *
	 * @var boolean
	 */
	public $timestamps = false;


    /**
	 * The field list for mass assignment.
	 *
	 * @var array
	 */
    protected $fillable = array('uuid','domain_sid','domain_id','owner_sid','created_by','created_dt','updated_by','updated_dt','update_counter','lang','task_sid','name','category_sid','details','reference','position','priority','allocation_date','planned_duration','actual_duration','actual_start_dt','actual_end_dt','status','status_reason','params_text');

    /**
     * Tell Eloquente that these properties are of DateTime format
     */
    public function getDates()
    {
        return array('created_dt', 'updated_dt', 'allocation_date', 'actual_start_dt', 'actual_end_dt');
    }

    /**
     * Validation rules for creation
     *
     * @var array
     */
    private static $validation_rules_create = array(
		'name' => 'required|min:2'
    	);

    /**
     * Validation rules for update
     *
     * @var array
     */
    private static $validation_rules_update = array(
        'name' => 'min:2'
    	);

    /**
     * Returns the validation object
     */
    public static function validator($fields, $is_create = true)
    {
    	$rules = ($is_create) ? static::$validation_rules_create : static::$validation_rules_update;
        $validator = \Validator::make($fields, $rules);

        return $validator;
    }

    public function task()
    {
        return $this->belongsTo('Task');
    }
    

    public function getName()
    {
        return $this->name;
    }
}
